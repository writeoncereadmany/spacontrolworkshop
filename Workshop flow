Stage 1: Converting to a failure-robust pipeline

Task: Refactoring Buy My Book

Reads a query string in, checks the account is valid, looks up the requested book,
charges the account, returns the book download code.

Ways To Blow Up in Stage 1
Throwing exceptions: reading object from string
Separate check required: authorisation
Returning null: map lookup
Failure code returned on void method: book already borrowed

Plus various steps which can't fail

Steps
 1: Implement error-handling in the traditional way
   - then commit, and move to a new branch
 2: Convert original implementation to a pipeline, without error handling
   - then merge in augmented error-handling APIs
 3: Add error-handling to pipeline, using Result-returning APIs
   - then deprecate error-handling APIs, and make tests expect use of original APIs
 4: Modify pipeline to convert non-Resulty things into Results at point of use
   - then remove error-handling APIs
 5: Compare and contrast outputs from 1 and 4

Stage 2: